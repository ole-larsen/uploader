// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Uplader Service API",
    "version": "1.0.0"
  },
  "host": "uploader",
  "basePath": "/api/v1",
  "paths": {
    "/files/:file/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "public"
        ],
        "summary": "Serve Static Image",
        "parameters": [
          {
            "type": "string",
            "name": "format",
            "in": "query"
          },
          {
            "type": "number",
            "name": "w",
            "in": "query"
          },
          {
            "type": "number",
            "name": "dpr",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/uploads"
            }
          },
          "500": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "instruments"
        ],
        "summary": "Prometheus metrics",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/metrics"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "security": [
          {
            "x-token": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "public"
        ],
        "summary": "This API endpoint always responds with \"pong\". When used over HTTP this API endpoint could also be used to measure network delays between your software and the API server.",
        "responses": {
          "200": {
            "description": "ping response",
            "schema": {
              "$ref": "#/definitions/ping"
            }
          },
          "500": {
            "description": "some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/uploader/files": {
      "get": {
        "security": [
          {
            "x-token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "uploader"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of uploaded files",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/file"
              }
            }
          },
          "500": {
            "description": "When some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "x-token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "uploader"
        ],
        "summary": "Edit uploaded file.",
        "parameters": [
          {
            "type": "string",
            "description": "existing file id",
            "name": "id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image name",
            "name": "name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "alternative text",
            "name": "alt",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image caption",
            "name": "caption",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "mime type",
            "name": "type",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image size in bytes",
            "name": "size",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image width",
            "name": "width",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image height",
            "name": "height",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image chapter",
            "name": "provider",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of files",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/file"
              }
            }
          },
          "500": {
            "description": "When some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "x-token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "uploader"
        ],
        "summary": "Uploads a file.",
        "parameters": [
          {
            "type": "string",
            "description": "generated file id",
            "name": "id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image name",
            "name": "name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "alternative text",
            "name": "alt",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image caption",
            "name": "caption",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "mime type",
            "name": "type",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image size in bytes",
            "name": "size",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image width",
            "name": "width",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image height",
            "name": "height",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image chapter",
            "name": "provider",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful upload",
            "schema": {
              "$ref": "#/definitions/publicFile"
            }
          },
          "500": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/uploader/files/{id}": {
      "get": {
        "security": [
          {
            "x-token": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "uploader"
        ],
        "summary": "get raw file version",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file",
            "schema": {
              "$ref": "#/definitions/file"
            }
          },
          "500": {
            "description": "When some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "file": {
      "type": "object",
      "properties": {
        "alt": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "created_by_id": {
          "type": "integer",
          "format": "int64"
        },
        "deleted": {
          "type": "string",
          "format": "date"
        },
        "ext": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "thumb": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date"
        },
        "updated_by_id": {
          "type": "integer",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "metrics": {
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "format": "number"
      }
    },
    "ok": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ping": {
      "type": "object",
      "required": [
        "ping"
      ],
      "properties": {
        "ping": {
          "description": "Result of method execution. ` + "`" + `pong` + "`" + ` in case of success",
          "type": "string",
          "enum": [
            "pong"
          ]
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "publicFile": {
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "alt": {
              "type": "string"
            },
            "caption": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date"
            },
            "created_by_id": {
              "type": "integer",
              "format": "int64"
            },
            "deleted": {
              "type": "string",
              "format": "date"
            },
            "ext": {
              "type": "string"
            },
            "hash": {
              "type": "string"
            },
            "height": {
              "type": "integer",
              "format": "int64"
            },
            "mime": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            },
            "thumb": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "updated": {
              "type": "string",
              "format": "date"
            },
            "updated_by_id": {
              "type": "integer",
              "format": "int64"
            },
            "url": {
              "type": "string"
            },
            "width": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "id": {
          "type": "integer",
          "format": "bigInt"
        }
      }
    },
    "uploads": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "x-token": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "API V1 request",
      "name": "v1"
    },
    {
      "description": "uploader routes",
      "name": "uploader"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Uplader Service API",
    "version": "1.0.0"
  },
  "host": "uploader",
  "basePath": "/api/v1",
  "paths": {
    "/files/:file/": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "public"
        ],
        "summary": "Serve Static Image",
        "parameters": [
          {
            "type": "string",
            "name": "format",
            "in": "query"
          },
          {
            "type": "number",
            "name": "w",
            "in": "query"
          },
          {
            "type": "number",
            "name": "dpr",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/uploads"
            }
          },
          "500": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "instruments"
        ],
        "summary": "Prometheus metrics",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/metrics"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "security": [
          {
            "x-token": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "public"
        ],
        "summary": "This API endpoint always responds with \"pong\". When used over HTTP this API endpoint could also be used to measure network delays between your software and the API server.",
        "responses": {
          "200": {
            "description": "ping response",
            "schema": {
              "$ref": "#/definitions/ping"
            }
          },
          "500": {
            "description": "some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/uploader/files": {
      "get": {
        "security": [
          {
            "x-token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "uploader"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of uploaded files",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/file"
              }
            }
          },
          "500": {
            "description": "When some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "x-token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "uploader"
        ],
        "summary": "Edit uploaded file.",
        "parameters": [
          {
            "type": "string",
            "description": "existing file id",
            "name": "id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image name",
            "name": "name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "alternative text",
            "name": "alt",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image caption",
            "name": "caption",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "mime type",
            "name": "type",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image size in bytes",
            "name": "size",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image width",
            "name": "width",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image height",
            "name": "height",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image chapter",
            "name": "provider",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of files",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/file"
              }
            }
          },
          "500": {
            "description": "When some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "x-token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "uploader"
        ],
        "summary": "Uploads a file.",
        "parameters": [
          {
            "type": "string",
            "description": "generated file id",
            "name": "id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image name",
            "name": "name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "alternative text",
            "name": "alt",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image caption",
            "name": "caption",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "mime type",
            "name": "type",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image size in bytes",
            "name": "size",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image width",
            "name": "width",
            "in": "formData"
          },
          {
            "type": "number",
            "description": "image height",
            "name": "height",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "image chapter",
            "name": "provider",
            "in": "formData"
          },
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "successful upload",
            "schema": {
              "$ref": "#/definitions/publicFile"
            }
          },
          "500": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/uploader/files/{id}": {
      "get": {
        "security": [
          {
            "x-token": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "uploader"
        ],
        "summary": "get raw file version",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "file",
            "schema": {
              "$ref": "#/definitions/file"
            }
          },
          "500": {
            "description": "When some error occurs",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PublicFileAttributes": {
      "type": "object",
      "properties": {
        "alt": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "created_by_id": {
          "type": "integer",
          "format": "int64"
        },
        "deleted": {
          "type": "string",
          "format": "date"
        },
        "ext": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "thumb": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date"
        },
        "updated_by_id": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "file": {
      "type": "object",
      "properties": {
        "alt": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date"
        },
        "created_by_id": {
          "type": "integer",
          "format": "int64"
        },
        "deleted": {
          "type": "string",
          "format": "date"
        },
        "ext": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "thumb": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date"
        },
        "updated_by_id": {
          "type": "integer",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "metrics": {
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "format": "number"
      }
    },
    "ok": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ping": {
      "type": "object",
      "required": [
        "ping"
      ],
      "properties": {
        "ping": {
          "description": "Result of method execution. ` + "`" + `pong` + "`" + ` in case of success",
          "type": "string",
          "enum": [
            "pong"
          ]
        }
      }
    },
    "principal": {
      "type": "string"
    },
    "publicFile": {
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "alt": {
              "type": "string"
            },
            "caption": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date"
            },
            "created_by_id": {
              "type": "integer",
              "format": "int64"
            },
            "deleted": {
              "type": "string",
              "format": "date"
            },
            "ext": {
              "type": "string"
            },
            "hash": {
              "type": "string"
            },
            "height": {
              "type": "integer",
              "format": "int64"
            },
            "mime": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            },
            "thumb": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "updated": {
              "type": "string",
              "format": "date"
            },
            "updated_by_id": {
              "type": "integer",
              "format": "int64"
            },
            "url": {
              "type": "string"
            },
            "width": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "id": {
          "type": "integer",
          "format": "bigInt"
        }
      }
    },
    "uploads": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "x-token": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "API V1 request",
      "name": "v1"
    },
    {
      "description": "uploader routes",
      "name": "uploader"
    }
  ]
}`))
}
