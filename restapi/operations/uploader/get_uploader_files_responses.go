// Code generated by go-swagger; DO NOT EDIT.

package uploader

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ole-larsen/uploader/models"
)

// GetUploaderFilesOKCode is the HTTP code returned for type GetUploaderFilesOK
const GetUploaderFilesOKCode int = 200

/*
GetUploaderFilesOK An array of uploaded files

swagger:response getUploaderFilesOK
*/
type GetUploaderFilesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.File `json:"body,omitempty"`
}

// NewGetUploaderFilesOK creates GetUploaderFilesOK with default headers values
func NewGetUploaderFilesOK() *GetUploaderFilesOK {

	return &GetUploaderFilesOK{}
}

// WithPayload adds the payload to the get uploader files o k response
func (o *GetUploaderFilesOK) WithPayload(payload []*models.File) *GetUploaderFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get uploader files o k response
func (o *GetUploaderFilesOK) SetPayload(payload []*models.File) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploaderFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.File, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUploaderFilesInternalServerErrorCode is the HTTP code returned for type GetUploaderFilesInternalServerError
const GetUploaderFilesInternalServerErrorCode int = 500

/*
GetUploaderFilesInternalServerError When some error occurs

swagger:response getUploaderFilesInternalServerError
*/
type GetUploaderFilesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUploaderFilesInternalServerError creates GetUploaderFilesInternalServerError with default headers values
func NewGetUploaderFilesInternalServerError() *GetUploaderFilesInternalServerError {

	return &GetUploaderFilesInternalServerError{}
}

// WithPayload adds the payload to the get uploader files internal server error response
func (o *GetUploaderFilesInternalServerError) WithPayload(payload *models.Error) *GetUploaderFilesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get uploader files internal server error response
func (o *GetUploaderFilesInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploaderFilesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
